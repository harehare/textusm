alias g := generate

main := "cmd/api-server/main.go"
module := "github.com/harehare/textusm"
sec := "gosec"
target := "./..."

setup:
  go get honnef.co/go/tools/cmd/staticcheck
  go get github.com/securego/gosec/v2/cmd/gosec
  go install golang.org/x/tools/go/analysis/passes/fieldalignment/cmd/fieldalignment@latest
  go install github.com/cosmtrek/air@latest
  go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.56.2

docker-up:
  #!/usr/bin/env bash
  type docker &>/dev/null
  docker_exist=$?
  docker ps &>/dev/null
  docker_startd=$?

  if [ $docker_exist -eq 0 ] && [ $docker_startd -eq 0 ]; then
    docker compose up -d
  fi

run:
	go run {{ main }}

build:
	go build -o dist/textusm {{ main }}

watch:
	air -c .air.toml

build-linux:
	GOOS="linux" GOARCH="amd64" go build -o dist/textusm {{ main }}

embed-build:
	go build -tags embed -o textusm-embed {{ main }}

generate:
	go get golang.org/x/tools/go/packages
	go get golang.org/x/tools/go/ast/astutil
	go get golang.org/x/tools/imports
	go get github.com/urfave/cli/v2
	go generate {{ target }}

test:
	go test {{ target }}

lint:
	staticcheck {{ target }}
	gosec {{ target }}
	golangci-lint run {{ target }}


fix:
	fieldalignment -fix pkg/domain/model/item/gistitem/gistitem.go
	fieldalignment -fix pkg/domain/model/item/gistitem/gistitem.go
	fieldalignment -fix pkg/presentation/graphql/models.go
