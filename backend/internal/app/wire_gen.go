// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"github.com/harehare/textusm/internal/app/handler"
	"github.com/harehare/textusm/internal/app/server"
	"github.com/harehare/textusm/internal/config"
	"github.com/harehare/textusm/internal/domain/service"
	"github.com/harehare/textusm/internal/github"
	"github.com/harehare/textusm/internal/infra/firebase/item"
	"github.com/harehare/textusm/internal/infra/firebase/settings"
	"github.com/harehare/textusm/internal/infra/firebase/share"
	"github.com/harehare/textusm/internal/infra/firebase/user"
	"github.com/harehare/textusm/internal/presentation/api"
	"github.com/harehare/textusm/internal/presentation/graphql"
	"net/http"
)

// Injectors from wire.go:

func InitializeServer() (*http.Server, error) {
	env, err := config.NewEnv()
	if err != nil {
		return nil, err
	}
	configConfig, err := config.NewConfig(env)
	if err != nil {
		return nil, err
	}
	itemRepository := item.NewFirestoreItemRepository(configConfig)
	shareRepository := share.NewFirestoreShareRepository(configConfig)
	userRepository := user.NewFirebaseUserRepository(configConfig)
	serviceService := service.NewService(itemRepository, shareRepository, userRepository)
	gistItemRepository := item.NewFirestoreGistItemRepository(configConfig)
	clientID := provideGithubClientID(env)
	clientSecret := provideGithubClientSecret(env)
	gistService := service.NewGistService(gistItemRepository, clientID, clientSecret)
	settingsRepository := settings.NewFirestoreSettingsRepository(configConfig)
	settingsService := service.NewSettingsService(settingsRepository, clientID, clientSecret)
	resolver := graphql.New(serviceService, gistService, settingsService, configConfig)
	apiApi := api.New(gistService, settingsService)
	logger := config.NewLogger(env)
	mux, err := handler.NewHandler(env, configConfig, resolver, apiApi, logger)
	if err != nil {
		return nil, err
	}
	httpServer := server.NewServer(mux, env)
	return httpServer, nil
}

// wire.go:

func provideGithubClientID(env *config.Env) github.ClientID {
	return github.ClientID(env.GithubClientID)
}

func provideGithubClientSecret(env *config.Env) github.ClientSecret {
	return github.ClientSecret(env.GithubClientSecret)
}
