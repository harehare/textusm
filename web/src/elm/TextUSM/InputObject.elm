-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module TextUSM.InputObject exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import TextUSM.Enum.Diagram
import TextUSM.Interface
import TextUSM.Object
import TextUSM.Scalar
import TextUSM.ScalarCodecs
import TextUSM.Union


buildInputItem : InputItemRequiredFields -> (InputItemOptionalFields -> InputItemOptionalFields) -> InputItem
buildInputItem required fillOptionals =
    let
        optionals =
            fillOptionals
                { id = Absent, thumbnail = Absent, tags = Absent }
    in
    { id = optionals.id, title = required.title, text = required.text, thumbnail = optionals.thumbnail, diagram = required.diagram, isPublic = required.isPublic, isBookmark = required.isBookmark, tags = optionals.tags }


type alias InputItemRequiredFields =
    { title : String
    , text : String
    , diagram : TextUSM.Enum.Diagram.Diagram
    , isPublic : Bool
    , isBookmark : Bool
    }


type alias InputItemOptionalFields =
    { id : OptionalArgument TextUSM.ScalarCodecs.Id
    , thumbnail : OptionalArgument String
    , tags : OptionalArgument (List (Maybe String))
    }


{-| Type for the InputItem input object.
-}
type alias InputItem =
    { id : OptionalArgument TextUSM.ScalarCodecs.Id
    , title : String
    , text : String
    , thumbnail : OptionalArgument String
    , diagram : TextUSM.Enum.Diagram.Diagram
    , isPublic : Bool
    , isBookmark : Bool
    , tags : OptionalArgument (List (Maybe String))
    }


{-| Encode a InputItem into a value that can be used as an argument.
-}
encodeInputItem : InputItem -> Value
encodeInputItem input =
    Encode.maybeObject
        [ ( "id", (TextUSM.ScalarCodecs.codecs |> TextUSM.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id ), ( "title", Encode.string input.title |> Just ), ( "text", Encode.string input.text |> Just ), ( "thumbnail", Encode.string |> Encode.optional input.thumbnail ), ( "diagram", Encode.enum TextUSM.Enum.Diagram.toString input.diagram |> Just ), ( "isPublic", Encode.bool input.isPublic |> Just ), ( "isBookmark", Encode.bool input.isBookmark |> Just ), ( "tags", (Encode.string |> Encode.maybe |> Encode.list) |> Encode.optional input.tags ) ]
