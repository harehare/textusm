name: cd
on:
  push:
    branches:
      - release
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/web/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install Dependencies
        working-directory: web
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install -f
      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main
        with:
          path: web
      - name: Generate elm-constants
        working-directory: web
        run: npm run generate-elm-constants
        env:
          API_ROOT: ${{ secrets.API_ROOT }}
          WEB_ROOT: ${{ secrets.WEB_ROOT }}
          APP_VERSION: ${{ steps.package-version.outputs.current-version }}
          REPO_URL: ${{ secrets.REPO_URL }}
      - name: Build
        working-directory: web
        env:
          API_ROOT: ${{ secrets.API_ROOT }}
          WEB_ROOT: ${{ secrets.WEB_ROOT }}
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_AUTH_EMULATOR_URL: ""
          NODE_ENV: ${{ secrets.NODE_ENV }}
          SENTRY_ENABLE: ${{ secrets.SENTRY_ENABLE }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          SENTRY_RELEASE: ${{ steps.package-version.outputs.current-version}}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          MONITOR_ENABLE: ${{ secrets.MONITOR_ENABLE }}
        run: npm run prod
      - name: Archive Production Artifact
        uses: actions/upload-artifact@master
        with:
          name: dist
          path: web/dist
  deploy-web:
    name: deploy-web
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: web/dist
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_TEXTUSM }}"
          projectId: textusm
          target: textusm
          channelId: live
  deploy-server:
    name: deploy-server
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Add server remote origin
        run: git remote add heroku https://heroku:${{ secrets.HEROKU_API_TOKEN }}@git.heroku.com/${{ secrets.HEROKU_APP_NAME }}.git
        env:
          HEROKU_API_TOKEN: ${{ secrets.HEROKU_API_TOKEN }}
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
      - name: Deploy server to Heroku
        run: git push heroku `git subtree split --prefix server HEAD`:master --force
  lighthouse:
    runs-on: ubuntu-latest
    name: lighthouse
    needs: [deploy-web, deploy-server]
    steps:
      - name: Lighthouse test
        uses: jakejarvis/lighthouse-action@master
        with:
          url: "https://app.textusm.com"
      - name: Upload results as an artifact
        uses: actions/upload-artifact@master
        with:
          name: report
          path: "./report"
  create-git-tag:
    runs-on: ubuntu-latest
    needs: [deploy-web, deploy-server]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main
        with:
          path: web
      - run: |
          git tag v${{ steps.package-version.outputs.current-version }}
          git push origin v${{ steps.package-version.outputs.current-version }}
      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ steps.package-version.outputs.current-version }}
          release_name: v${{ steps.package-version.outputs.current-version }}
          body: ${{steps.github_release.outputs.changelog}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
