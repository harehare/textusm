name: build_and_deploy

on:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
      noop:
        default: "false"
        required: false
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".tool-versions"
      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
        working-directory: frontend
      - uses: actions/cache@v4
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ hashFiles('**/frontend/package-lock.json') }}
            ${{ runner.os }}-node-
      - name: Install Dependencies
        working-directory: frontend
        run: npm ci --include=dev
      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main
        with:
          path: frontend
      - name: Generate elm-constants
        working-directory: frontend
        run: npm run generate:elm-constants
        env:
          API_ROOT: ${{ secrets.API_ROOT }}
          WEB_ROOT: ${{ secrets.WEB_ROOT }}
          APP_VERSION: ${{ steps.package-version.outputs.current-version }}
          REPO_BUTTON_URL: ${{ secrets.REPO_BUTTON_URL }}
      - name: build
        working-directory: frontend
        env:
          API_ROOT: ${{ secrets.API_ROOT }}
          WEB_ROOT: ${{ secrets.WEB_ROOT }}
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_AUTH_EMULATOR_HOST: ""
          SENTRY_ENABLE: ${{ secrets.SENTRY_ENABLE }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          SENTRY_RELEASE: ${{ steps.package-version.outputs.current-version}}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          MONITOR_ENABLE: ${{ secrets.MONITOR_ENABLE }}
        run: npm run prod
      - name: Archive Production Artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: frontend/dist
          retention-days: 3

  deploy-frontend:
    name: deploy-frontend
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: frontend/dist
      - uses: FirebaseExtended/action-hosting-deploy@v0
        if: ${{ inputs.noop != 'true' }}
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_TEXTUSM }}"
          projectId: textusm
          target: textusm
          channelId: live

  deploy-backend:
    name: deploy-backend
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        if: ${{ inputs.noop != 'true' }}
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - uses: actions/setup-node@v4
        if: ${{ inputs.noop != 'true' }}
        with:
          node-version-file: ".tool-versions"
      - name: Deploy backend to render.com
        if: ${{ inputs.noop != 'true' }}
        run: curl --silent --show-error --fail $RENDER_DEPLOY_HOOK_URL > /dev/null
        env:
          RENDER_DEPLOY_HOOK_URL: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
